<div class="container mt-5 text-center">
  <h2>Products from Cart</h2>
  <br>
  <br>
  <a href="/products" class="btn btn-primary">Products</a> | <a class="btn btn-warning"
    href="/api/carts/{{cart._id}}/purchase" id="botonCompra">Comprar</a> | <a href="/api/sessions/logout"
    class="btn btn-danger">Logout</a> | <a id="paybutton" class="btn btn-danger">Pay</a> |
</div>
<br>
<br>
<hr />
<div class="table-responsive my-5 container">
  <table class="table table-bordered table-striped table-hover text-center">
    <thead class="thead-dark ">
      <tr>
        <td><strong>Producto</strong></td>
        <td><strong>Descripción</strong></td>
        <td><strong>Precio</strong></td>
        <td><strong>Código</strong></td>
        <td><strong>Stock</strong></td>
        <td><strong>Cantidad</strong></td>
        <th></th>
      </tr>
    </thead>
    <tbody>
      {{#each cart.products}}
      <tr>
        <td>{{this.product.title}}</td>
        <td>{{this.product.description}}</td>
        <td>{{this.product.price}}</td>
        <td>{{this.product.code}}</td>
        <td>{{this.product.stock}}</td>
        <td>{{this.quantity}}</td>
        <td> <button class="btn btn-danger" onclick="deleteProduct('{{this.product._id}}')"> Borrar Producto </button>
        </td>
      </tr>
      {{/each}}
    </tbody>
  </table>
</div>

<script>
  const deleteProduct = (pid) => {
    fetch(`/api/carts/{{cart._id}}/product/${pid}`, {
      method: 'delete'
    })
      .then(result => result.json())
      .then(result => {
        if (result.status === 'error') throw new Error(result.error)
        alert(`¡Product removed from cart successfully!`)
        window.location.href = '/carts/{{cart._id}}'
      })
      .catch(err => alert(`Ocurrió un error :(\n${err}`))
  }

  const checkout = async () => {
    try {
      const response = await fetch(`/api/carts/{{cart._id}}/purchase`, {
        method: "GET",
      });
      const result = await response.json();

      if (result.status === 'error') {
        throw new Error(result.error);
      } else {
        const ticketDetails = result.payload;
        console.log('Checkout con exito');
        return ticketDetails;
      }
    } catch (error) {
      alert('Ocurrió un error durante el checkout: ' + error);
      throw error;
    }
  };

  const payAndCheckout = async () => {
    try {
      // Lógica para el proceso de pago
      const payResponse = await fetch('/pay/create-checkout-session', {
        method: 'POST',
      });

      const payData = await payResponse.json();

      if (payData.status === 'error') {
        throw new Error(payData.error);
      }

      // Si el pago fue exitoso, ejecutar el proceso de checkout
      const ticketDetails = await checkout();

      // ... Código para mostrar los detalles de la compra ...

    } catch (error) {
      Swal.fire({
        title: 'Error',
        text: 'Ocurrió un error durante el proceso. Por favor, inténtalo de nuevo.',
        icon: 'error',
      });
    }
  };

  const botonCompra = document.getElementById('botonCompra');
  botonCompra.addEventListener('click', async (event) => {
    event.preventDefault();
    await payAndCheckout();
  });

  const button = document.getElementById('paybutton');
  button.addEventListener('click', async () => {
    const res = await fetch('/pay/create-checkout-session', {
      method: 'POST',
    });
    const data = await res.json();
    window.location.href = data.url
  });

</script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<style>
  body {
    background-image: url('https://i.ibb.co/hMWTddk/dise-ado-fondo-de-tira-de-pel-cula-vac-o.jpg');
    background-size: cover;
    background-repeat: no-repeat;
    background-attachment: fixed;
  }
</style>
